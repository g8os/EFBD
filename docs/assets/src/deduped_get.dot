digraph {
    label="(*dedupedStorage).Get Logic";
 
    node[shape="box", style="rounded"]
       start; content; nil;
    node[shape="parallelogram", style=""]
       lba_get; get_primary; get_template; store_async;
    node[shape="diamond", style=""]
       if_hash; has_template;
 
    start -> lba_get;
    lba_get -> if_hash;
    if_hash -> nil[label="error or nil-hash"];
    if_hash -> get_primary[label="found the metadata, can the data itself be fetched?"];
    get_primary -> content[label="return content"];
    get_primary -> has_template[label="content not available in primary storage"];
    has_template -> nil[label="no template storage available"];
    has_template -> get_template[label="template storage available"];
    get_template -> nil[label="content not available in template storage"];
    get_template -> store_async[label="store template content (async) in primary storage"];
    get_template -> content[label="return template content"];
}
