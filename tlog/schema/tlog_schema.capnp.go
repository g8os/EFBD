// Code generated by capnpc-go. DO NOT EDIT.

package schema

import (
	strconv "strconv"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type HandshakeRequest struct{ capnp.Struct }

// HandshakeRequest_TypeID is the unique identifier for the type HandshakeRequest.
const HandshakeRequest_TypeID = 0xe0d4e6d68fa24ac0

func NewHandshakeRequest(s *capnp.Segment) (HandshakeRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return HandshakeRequest{st}, err
}

func NewRootHandshakeRequest(s *capnp.Segment) (HandshakeRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return HandshakeRequest{st}, err
}

func ReadRootHandshakeRequest(msg *capnp.Message) (HandshakeRequest, error) {
	root, err := msg.RootPtr()
	return HandshakeRequest{root.Struct()}, err
}

func (s HandshakeRequest) String() string {
	str, _ := text.Marshal(0xe0d4e6d68fa24ac0, s.Struct)
	return str
}

func (s HandshakeRequest) Version() uint32 {
	return s.Struct.Uint32(0)
}

func (s HandshakeRequest) SetVersion(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s HandshakeRequest) VdiskID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HandshakeRequest) HasVdiskID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s HandshakeRequest) VdiskIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HandshakeRequest) SetVdiskID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HandshakeRequest) FirstSequence() uint64 {
	return s.Struct.Uint64(8)
}

func (s HandshakeRequest) SetFirstSequence(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s HandshakeRequest) ResetFirstSequence() bool {
	return s.Struct.Bit(32)
}

func (s HandshakeRequest) SetResetFirstSequence(v bool) {
	s.Struct.SetBit(32, v)
}

// HandshakeRequest_List is a list of HandshakeRequest.
type HandshakeRequest_List struct{ capnp.List }

// NewHandshakeRequest creates a new list of HandshakeRequest.
func NewHandshakeRequest_List(s *capnp.Segment, sz int32) (HandshakeRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return HandshakeRequest_List{l}, err
}

func (s HandshakeRequest_List) At(i int) HandshakeRequest { return HandshakeRequest{s.List.Struct(i)} }

func (s HandshakeRequest_List) Set(i int, v HandshakeRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

// HandshakeRequest_Promise is a wrapper for a HandshakeRequest promised by a client call.
type HandshakeRequest_Promise struct{ *capnp.Pipeline }

func (p HandshakeRequest_Promise) Struct() (HandshakeRequest, error) {
	s, err := p.Pipeline.Struct()
	return HandshakeRequest{s}, err
}

type HandshakeResponse struct{ capnp.Struct }

// HandshakeResponse_TypeID is the unique identifier for the type HandshakeResponse.
const HandshakeResponse_TypeID = 0xee959a7d96c96641

func NewHandshakeResponse(s *capnp.Segment) (HandshakeResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return HandshakeResponse{st}, err
}

func NewRootHandshakeResponse(s *capnp.Segment) (HandshakeResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return HandshakeResponse{st}, err
}

func ReadRootHandshakeResponse(msg *capnp.Message) (HandshakeResponse, error) {
	root, err := msg.RootPtr()
	return HandshakeResponse{root.Struct()}, err
}

func (s HandshakeResponse) String() string {
	str, _ := text.Marshal(0xee959a7d96c96641, s.Struct)
	return str
}

func (s HandshakeResponse) Version() uint32 {
	return s.Struct.Uint32(0)
}

func (s HandshakeResponse) SetVersion(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s HandshakeResponse) Status() int8 {
	return int8(s.Struct.Uint8(4))
}

func (s HandshakeResponse) SetStatus(v int8) {
	s.Struct.SetUint8(4, uint8(v))
}

// HandshakeResponse_List is a list of HandshakeResponse.
type HandshakeResponse_List struct{ capnp.List }

// NewHandshakeResponse creates a new list of HandshakeResponse.
func NewHandshakeResponse_List(s *capnp.Segment, sz int32) (HandshakeResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return HandshakeResponse_List{l}, err
}

func (s HandshakeResponse_List) At(i int) HandshakeResponse {
	return HandshakeResponse{s.List.Struct(i)}
}

func (s HandshakeResponse_List) Set(i int, v HandshakeResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

// HandshakeResponse_Promise is a wrapper for a HandshakeResponse promised by a client call.
type HandshakeResponse_Promise struct{ *capnp.Pipeline }

func (p HandshakeResponse_Promise) Struct() (HandshakeResponse, error) {
	s, err := p.Pipeline.Struct()
	return HandshakeResponse{s}, err
}

type TlogAggregation struct{ capnp.Struct }

// TlogAggregation_TypeID is the unique identifier for the type TlogAggregation.
const TlogAggregation_TypeID = 0xe46ab5b4b619e094

func NewTlogAggregation(s *capnp.Segment) (TlogAggregation, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3})
	return TlogAggregation{st}, err
}

func NewRootTlogAggregation(s *capnp.Segment) (TlogAggregation, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3})
	return TlogAggregation{st}, err
}

func ReadRootTlogAggregation(msg *capnp.Message) (TlogAggregation, error) {
	root, err := msg.RootPtr()
	return TlogAggregation{root.Struct()}, err
}

func (s TlogAggregation) String() string {
	str, _ := text.Marshal(0xe46ab5b4b619e094, s.Struct)
	return str
}

func (s TlogAggregation) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s TlogAggregation) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TlogAggregation) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s TlogAggregation) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s TlogAggregation) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s TlogAggregation) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s TlogAggregation) Timestamp() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s TlogAggregation) SetTimestamp(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s TlogAggregation) Blocks() (TlogBlock_List, error) {
	p, err := s.Struct.Ptr(1)
	return TlogBlock_List{List: p.List()}, err
}

func (s TlogAggregation) HasBlocks() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TlogAggregation) SetBlocks(v TlogBlock_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewBlocks sets the blocks field to a newly
// allocated TlogBlock_List, preferring placement in s's segment.
func (s TlogAggregation) NewBlocks(n int32) (TlogBlock_List, error) {
	l, err := NewTlogBlock_List(s.Struct.Segment(), n)
	if err != nil {
		return TlogBlock_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s TlogAggregation) Prev() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s TlogAggregation) HasPrev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s TlogAggregation) SetPrev(v []byte) error {
	return s.Struct.SetData(2, v)
}

// TlogAggregation_List is a list of TlogAggregation.
type TlogAggregation_List struct{ capnp.List }

// NewTlogAggregation creates a new list of TlogAggregation.
func NewTlogAggregation_List(s *capnp.Segment, sz int32) (TlogAggregation_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3}, sz)
	return TlogAggregation_List{l}, err
}

func (s TlogAggregation_List) At(i int) TlogAggregation { return TlogAggregation{s.List.Struct(i)} }

func (s TlogAggregation_List) Set(i int, v TlogAggregation) error {
	return s.List.SetStruct(i, v.Struct)
}

// TlogAggregation_Promise is a wrapper for a TlogAggregation promised by a client call.
type TlogAggregation_Promise struct{ *capnp.Pipeline }

func (p TlogAggregation_Promise) Struct() (TlogAggregation, error) {
	s, err := p.Pipeline.Struct()
	return TlogAggregation{s}, err
}

type TlogClientMessage struct{ capnp.Struct }
type TlogClientMessage_Which uint16

const (
	TlogClientMessage_Which_block            TlogClientMessage_Which = 0
	TlogClientMessage_Which_forceFlushAtSeq  TlogClientMessage_Which = 1
	TlogClientMessage_Which_waitNBDSlaveSync TlogClientMessage_Which = 2
	TlogClientMessage_Which_disconnect       TlogClientMessage_Which = 3
)

func (w TlogClientMessage_Which) String() string {
	const s = "blockforceFlushAtSeqwaitNBDSlaveSyncdisconnect"
	switch w {
	case TlogClientMessage_Which_block:
		return s[0:5]
	case TlogClientMessage_Which_forceFlushAtSeq:
		return s[5:20]
	case TlogClientMessage_Which_waitNBDSlaveSync:
		return s[20:36]
	case TlogClientMessage_Which_disconnect:
		return s[36:46]

	}
	return "TlogClientMessage_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// TlogClientMessage_TypeID is the unique identifier for the type TlogClientMessage.
const TlogClientMessage_TypeID = 0xc8407b23fdf6d1a2

func NewTlogClientMessage(s *capnp.Segment) (TlogClientMessage, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return TlogClientMessage{st}, err
}

func NewRootTlogClientMessage(s *capnp.Segment) (TlogClientMessage, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return TlogClientMessage{st}, err
}

func ReadRootTlogClientMessage(msg *capnp.Message) (TlogClientMessage, error) {
	root, err := msg.RootPtr()
	return TlogClientMessage{root.Struct()}, err
}

func (s TlogClientMessage) String() string {
	str, _ := text.Marshal(0xc8407b23fdf6d1a2, s.Struct)
	return str
}

func (s TlogClientMessage) Which() TlogClientMessage_Which {
	return TlogClientMessage_Which(s.Struct.Uint16(0))
}
func (s TlogClientMessage) Block() (TlogBlock, error) {
	p, err := s.Struct.Ptr(0)
	return TlogBlock{Struct: p.Struct()}, err
}

func (s TlogClientMessage) HasBlock() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TlogClientMessage) SetBlock(v TlogBlock) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlock sets the block field to a newly
// allocated TlogBlock struct, preferring placement in s's segment.
func (s TlogClientMessage) NewBlock() (TlogBlock, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewTlogBlock(s.Struct.Segment())
	if err != nil {
		return TlogBlock{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s TlogClientMessage) ForceFlushAtSeq() uint64 {
	return s.Struct.Uint64(8)
}

func (s TlogClientMessage) SetForceFlushAtSeq(v uint64) {
	s.Struct.SetUint16(0, 1)
	s.Struct.SetUint64(8, v)
}

func (s TlogClientMessage) SetWaitNBDSlaveSync() {
	s.Struct.SetUint16(0, 2)

}

func (s TlogClientMessage) SetDisconnect() {
	s.Struct.SetUint16(0, 3)

}

// TlogClientMessage_List is a list of TlogClientMessage.
type TlogClientMessage_List struct{ capnp.List }

// NewTlogClientMessage creates a new list of TlogClientMessage.
func NewTlogClientMessage_List(s *capnp.Segment, sz int32) (TlogClientMessage_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return TlogClientMessage_List{l}, err
}

func (s TlogClientMessage_List) At(i int) TlogClientMessage {
	return TlogClientMessage{s.List.Struct(i)}
}

func (s TlogClientMessage_List) Set(i int, v TlogClientMessage) error {
	return s.List.SetStruct(i, v.Struct)
}

// TlogClientMessage_Promise is a wrapper for a TlogClientMessage promised by a client call.
type TlogClientMessage_Promise struct{ *capnp.Pipeline }

func (p TlogClientMessage_Promise) Struct() (TlogClientMessage, error) {
	s, err := p.Pipeline.Struct()
	return TlogClientMessage{s}, err
}

func (p TlogClientMessage_Promise) Block() TlogBlock_Promise {
	return TlogBlock_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type TlogBlock struct{ capnp.Struct }

// TlogBlock_TypeID is the unique identifier for the type TlogBlock.
const TlogBlock_TypeID = 0x8cf178de3c82d431

func NewTlogBlock(s *capnp.Segment) (TlogBlock, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 2})
	return TlogBlock{st}, err
}

func NewRootTlogBlock(s *capnp.Segment) (TlogBlock, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 2})
	return TlogBlock{st}, err
}

func ReadRootTlogBlock(msg *capnp.Message) (TlogBlock, error) {
	root, err := msg.RootPtr()
	return TlogBlock{root.Struct()}, err
}

func (s TlogBlock) String() string {
	str, _ := text.Marshal(0x8cf178de3c82d431, s.Struct)
	return str
}

func (s TlogBlock) Sequence() uint64 {
	return s.Struct.Uint64(0)
}

func (s TlogBlock) SetSequence(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s TlogBlock) Index() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s TlogBlock) SetIndex(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s TlogBlock) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s TlogBlock) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TlogBlock) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s TlogBlock) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s TlogBlock) HasData() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TlogBlock) SetData(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s TlogBlock) Timestamp() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s TlogBlock) SetTimestamp(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

func (s TlogBlock) Operation() uint8 {
	return s.Struct.Uint8(24)
}

func (s TlogBlock) SetOperation(v uint8) {
	s.Struct.SetUint8(24, v)
}

// TlogBlock_List is a list of TlogBlock.
type TlogBlock_List struct{ capnp.List }

// NewTlogBlock creates a new list of TlogBlock.
func NewTlogBlock_List(s *capnp.Segment, sz int32) (TlogBlock_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 2}, sz)
	return TlogBlock_List{l}, err
}

func (s TlogBlock_List) At(i int) TlogBlock { return TlogBlock{s.List.Struct(i)} }

func (s TlogBlock_List) Set(i int, v TlogBlock) error { return s.List.SetStruct(i, v.Struct) }

// TlogBlock_Promise is a wrapper for a TlogBlock promised by a client call.
type TlogBlock_Promise struct{ *capnp.Pipeline }

func (p TlogBlock_Promise) Struct() (TlogBlock, error) {
	s, err := p.Pipeline.Struct()
	return TlogBlock{s}, err
}

type TlogResponse struct{ capnp.Struct }

// TlogResponse_TypeID is the unique identifier for the type TlogResponse.
const TlogResponse_TypeID = 0x98d11ae1c78a24d9

func NewTlogResponse(s *capnp.Segment) (TlogResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TlogResponse{st}, err
}

func NewRootTlogResponse(s *capnp.Segment) (TlogResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TlogResponse{st}, err
}

func ReadRootTlogResponse(msg *capnp.Message) (TlogResponse, error) {
	root, err := msg.RootPtr()
	return TlogResponse{root.Struct()}, err
}

func (s TlogResponse) String() string {
	str, _ := text.Marshal(0x98d11ae1c78a24d9, s.Struct)
	return str
}

func (s TlogResponse) Status() int8 {
	return int8(s.Struct.Uint8(0))
}

func (s TlogResponse) SetStatus(v int8) {
	s.Struct.SetUint8(0, uint8(v))
}

func (s TlogResponse) Sequences() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s TlogResponse) HasSequences() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TlogResponse) SetSequences(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewSequences sets the sequences field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s TlogResponse) NewSequences(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// TlogResponse_List is a list of TlogResponse.
type TlogResponse_List struct{ capnp.List }

// NewTlogResponse creates a new list of TlogResponse.
func NewTlogResponse_List(s *capnp.Segment, sz int32) (TlogResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return TlogResponse_List{l}, err
}

func (s TlogResponse_List) At(i int) TlogResponse { return TlogResponse{s.List.Struct(i)} }

func (s TlogResponse_List) Set(i int, v TlogResponse) error { return s.List.SetStruct(i, v.Struct) }

// TlogResponse_Promise is a wrapper for a TlogResponse promised by a client call.
type TlogResponse_Promise struct{ *capnp.Pipeline }

func (p TlogResponse_Promise) Struct() (TlogResponse, error) {
	s, err := p.Pipeline.Struct()
	return TlogResponse{s}, err
}

const schema_f4533cbae6e08506 = "x\xda\x8c\x93]h\x1cU\x1c\xc5\xcf\xb9wf\xd3B" +
	"\x92\xcd\xb0+\xb4\x05Y\xc1>\xd4`\xb5m|*\x85" +
	"6\xb1\x96\x1aPz\x13A\x08\x82\x8e\xb3\xb7\xbbcv" +
	"g6{g\xf3\xa1-\xb5\xa5\x81Z\x14\x15\xac\xb4\xc5" +
	"\x07S*Xh@\xa1\x15\xf1\xa9o\xeac\xa1\x08\xbe" +
	"H\x04\xa9o\x82 >YG\xee\xec\xa7i\xb1\xbe\xed" +
	"\xdc=s\xe7\xff;\xe7\x7f\xf6\x8c\x88Cb\xaf\xbb$" +
	"\x01\xb5\xcb\xcd\xa5{\xef\x9c9\xf0\xd3\xf2\xef\xefBm" +
	"\xa7\x93\xe6V7\xee~s`\xf6\x0f\xb8b\x08\x98X" +
	"\xe3\x0e\x16\xbe\xa4\xfd\xb9\xce\x97\x09\xa6?\xee<\xff\xed" +
	"\xcf;n_\xb4r\x0e\xc83\x8d+\xf7\xb1\xf0\x88\x1c" +
	"\x02\x0a\x9e\\\x02\xd3+\xb7\xff\xbc\xf7\xf8[\x87\xbe\xb3" +
	"j\xd1W?\xc7!\x07\x988-\xe7X\xb8\x90\xc9?" +
	"\x94\xbf\x82\xe9\xad\xe9+\xef\xffp\xf7\xce\xc6&y\xfb" +
	"\xf2\x963\xc3\xc2;\x8eU\xaf:V\xfd\xd1\xc6\xf6\xaf" +
	"n\xdc|\xe3\x97\xcdj{\xe1\x84v\xa7YXq\xb3" +
	"\x17\xdd\x92\x9d|\xf2\xf8\xf7\x1f\x9f\xbc|\xe1\xb7M\x93" +
	"\xdb\x0b'.\xe5\xe6XX\xcf\xd9\xbb\xaf\xe5\x96\xb0;" +
	"5AU\xd7\xfd\xa7\x13Y\x8b+\xaf\xb6\x1f\x9e\x0a\xfc" +
	"F\xd4\xd8\xffR-\xaeL\xd5b\x19\xcc\x1f#\xd56" +
	"\xe9\x00\x0e\x01\xef\xd24\xa0.J\xaa\xab\x82\x1eY\xa4" +
	"=\\\xdb\x07\xa8O$\xd5\xe7\x82\x14E\x0a\xc0\xfbl" +
	"\x1cP\x9fJ\xaa\xeb\x82\x9ed\x91\x12\xf0\xae\xd9\xc3\xab" +
	"\x92\xea\x0bA\xcf\x11E:\x80\xb7>\x03\xa8\xeb\x92\xea" +
	"kA\xcf\xddV\xa4\x0bx7\xed\xe1\x0dIuK0" +
	"5z\xa1\xa5\xa3@\x03\xe0V\x08n\x05KaT\xd6" +
	"\xcbt!\xe8\x82\xf9\xaao\xaa\x1c\x81\xe0\x08\x98/\xfb" +
	"\x89\xdf}H\x93\xb0\xaeM\xe2\xd7\xc1FW\x9d\xc6\x0d" +
	"\xdd\xf4\x930\x06#\xe6 \x98\x03\x1fb\xc5\x8c6\xa5" +
	"F\x1c\x19m\xdd\xd8\xd2s\xe3\x89\xfd\x80\xda)\xa9\xf6" +
	"\x08v\xcd\xd8m'\x7fRR\x1d\x15<h\x12?i" +
	"\x19\x0a\x08\x0a\x0c\x80\xd0p\x14<&\x99\xf1\x8c\x0e|" +
	"\xdfy\xe0\xf7\x9f\xad\x85:J^\xd0\xc6\xf8\xb2\x92\x0d" +
	"1&\x9d\xe14\xcd\xa6\xf0\xad\xfd\xafH\xaa\xaa\xe0\xa3" +
	"\xfc;\xed\x0c\xa2\xcf\x00\xaa,\xa9\x1a\x82#\xe2^\xda" +
	"\xce\xa5~\x1eP\x0dIuBpD\xfe\x95\xb6\x83Y" +
	"\x99\x03\xd4\xb2\xa4:+Xz\xbd\x16\x07\xf3\x1c\xebw" +
	"\x06\xe4\x18\x98\x1e\x8f\x9b\x81>Rk\xd1T'\x93Y" +
	"\xbd\xd0\x0b#]\xf2\xc3\xe4\xc5\xa9\xc3\xb3\xac\xf9\x8bz" +
	"v%\x0a0\x94\x96C\x13\xc4Q\xa4!\x83\x04\xb9\xff" +
	"\xe0;\xeaGeS\xf5\xe7\xf5\x8cu\xc70\xe9\xe0u" +
	"<\xf6\xa7\xfat]\x8f\xb5={MR\xd5\x04=\xc1" +
	"6Y\xd8\x04TUR%v\xe3\x1ek\x83-\\\x06" +
	"T\"\xa9\xde\x16<\xb5\xa8\x9b&\x8c#n\x81\xe0\x16" +
	"\xf0\xd4b94\xf3\xcf\x1f\xe60\x04\x87-`\xd84" +
	"\x19X)K\xa9\x87\xd7\xd4F'G\xc2&\xb3\x7f[" +
	":\x92\x81&!\xc8\x87\x067Y\xa94u\xc5.[" +
	"\x04X\xb0b\x0f\xec\xe4x\xdf\xf3.\xd8i{vB" +
	"R\x9d\x1b\x00[\xb5\x1buVR}0P\xa5\xf7\xec" +
	"\xea\x9d\xeb\x14\xb1[\xa5\xb5\xf1~\x11\xf3\x91_\xd7]" +
	"\xb4\xbc\x09\xdf\xec\xf3<\xa0\x13\x07\xb3\xd0{[\xf9\xef" +
	"\xf0G\xc1|\xa3\xa9\x17{\xa5\xfa_a\x9aF\x1c\xc9" +
	"\xfb\x1a3\xd5o\x8cG\xa7S\x19\xcb\xb2KR=s" +
	"\x7fH\x9b*\xf4O\x00\x00\x00\xff\xff\xcf`j\xf2"

func init() {
	schemas.Register(schema_f4533cbae6e08506,
		0x8cf178de3c82d431,
		0x98d11ae1c78a24d9,
		0xc8407b23fdf6d1a2,
		0xe0d4e6d68fa24ac0,
		0xe46ab5b4b619e094,
		0xee959a7d96c96641)
}
